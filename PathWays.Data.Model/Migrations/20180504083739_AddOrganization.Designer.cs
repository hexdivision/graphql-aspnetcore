// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PathWays.Data.Model;
using System;

namespace PathWays.Data.Model.Migrations
{
    [DbContext(typeof(PathWaysContext))]
    [Migration("20180504083739_AddOrganization")]
    partial class AddOrganization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PathWays.Data.Model.AccessCodeExcludeWord", b =>
                {
                    b.Property<int>("AccessCodeExcludeWordId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ExcludeWord")
                        .HasMaxLength(6);

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("AccessCodeExcludeWordId");

                    b.ToTable("AccessCodeExcludeWords");
                });

            modelBuilder.Entity("PathWays.Data.Model.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("DisplayLogoId");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200);

                    b.Property<bool?>("DisplaySupportChat");

                    b.Property<bool?>("DisplaySupportEmail");

                    b.Property<bool?>("DisplaySupportPhone");

                    b.Property<bool?>("DisplayUserSupport");

                    b.Property<decimal?>("FlatMonthlyFee")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("LicenseType");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("OrganizationGuid");

                    b.Property<int?>("OrganizationStatus");

                    b.Property<decimal?>("PerComplationFee")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("PerServiceAccessFee")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("PerVisitFee")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("SupportChatDescription")
                        .HasMaxLength(1000);

                    b.Property<string>("SupportChatUrl")
                        .HasMaxLength(1000);

                    b.Property<string>("SupportEmail")
                        .HasMaxLength(100);

                    b.Property<string>("SupportEmailDescription")
                        .HasMaxLength(1000);

                    b.Property<string>("SupportPhone1")
                        .HasMaxLength(15);

                    b.Property<string>("SupportPhone1Description")
                        .HasMaxLength(1000);

                    b.Property<string>("SupportPhone2")
                        .HasMaxLength(15);

                    b.Property<string>("SupportPhone2Description")
                        .HasMaxLength(1000);

                    b.Property<int>("TimeZoneOffset");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("PathWays.Data.Model.SystemSettings", b =>
                {
                    b.Property<int>("SystemSettingsId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<int>("Type");

                    b.Property<string>("Value");

                    b.HasKey("SystemSettingsId");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("PathWays.Data.Model.SystemUser", b =>
                {
                    b.Property<int>("SystemUserId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("AcceptsTextMessages");

                    b.Property<string>("AccountEmail")
                        .HasMaxLength(100);

                    b.Property<string>("AccountMobile")
                        .HasMaxLength(15);

                    b.Property<bool>("AdminAccess");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FullName")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsActive");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Password")
                        .HasMaxLength(250);

                    b.Property<int>("SystemUserRoleId");

                    b.Property<Guid>("UserGuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("SystemUserId");

                    b.HasIndex("SystemUserRoleId");

                    b.ToTable("SystemUsers");
                });

            modelBuilder.Entity("PathWays.Data.Model.SystemUserRole", b =>
                {
                    b.Property<int>("SystemUserRoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleDescritption")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SessionDuration")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(900);

                    b.HasKey("SystemUserRoleId");

                    b.ToTable("SystemUserRoles");
                });

            modelBuilder.Entity("PathWays.Data.Model.UserExploration", b =>
                {
                    b.Property<int>("UserExplorationId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("AcceptedTerms");

                    b.Property<string>("AccessCode")
                        .HasMaxLength(15);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DomainId");

                    b.Property<DateTime>("ExplorationCompletionDate");

                    b.Property<byte?>("ExplorationStatus");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OrganizationId");

                    b.HasKey("UserExplorationId");

                    b.ToTable("UserExplorations");
                });

            modelBuilder.Entity("PathWays.Data.Model.UserExplorationToken", b =>
                {
                    b.Property<int>("UserExplorationTokenId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessCode")
                        .HasMaxLength(15);

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("ExpiresOn");

                    b.Property<int?>("ExplorationId");

                    b.Property<DateTime>("IssuedOn");

                    b.Property<byte>("RoleId");

                    b.Property<int?>("SystemUserId");

                    b.Property<int?>("UserExplorationId");

                    b.HasKey("UserExplorationTokenId");

                    b.HasIndex("UserExplorationId");

                    b.ToTable("UserExplorationTokens");
                });

            modelBuilder.Entity("PathWays.Data.Model.UserToken", b =>
                {
                    b.Property<int>("UserTokenId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("ExpiresOn");

                    b.Property<DateTime>("IssuedOn");

                    b.Property<int?>("ParticipantId");

                    b.Property<int>("RoleId");

                    b.Property<Guid?>("SystemUserGuid");

                    b.Property<int?>("SystemUserId");

                    b.HasKey("UserTokenId");

                    b.HasIndex("SystemUserId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("PathWays.Data.Model.SystemUser", b =>
                {
                    b.HasOne("PathWays.Data.Model.SystemUserRole", "SystemUserRole")
                        .WithMany()
                        .HasForeignKey("SystemUserRoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PathWays.Data.Model.UserExplorationToken", b =>
                {
                    b.HasOne("PathWays.Data.Model.UserExploration", "UserExploration")
                        .WithMany("UserExplorationTokens")
                        .HasForeignKey("UserExplorationId");
                });

            modelBuilder.Entity("PathWays.Data.Model.UserToken", b =>
                {
                    b.HasOne("PathWays.Data.Model.SystemUser", "SystemUser")
                        .WithMany()
                        .HasForeignKey("SystemUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
